# Automated Dependency Update Workflow
# File: .github/workflows/dependency-update.yml

name: Dependency Updates

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of update to perform'
        required: true
        default: 'minor'
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  pull-requests: write

jobs:
  update-python-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install pip-tools
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools pip-audit safety

      - name: Update dependencies
        run: |
          # Update development dependencies
          pip-compile --upgrade pyproject.toml --extra dev --output-file requirements-dev.txt
          
          # Update production dependencies
          pip-compile --upgrade pyproject.toml --output-file requirements.txt

      - name: Security audit
        run: |
          # Check for security vulnerabilities
          pip-audit --format=json --output=security-audit.json
          safety check --json --output=safety-report.json

      - name: Install updated dependencies
        run: |
          pip install -r requirements-dev.txt

      - name: Run tests
        run: |
          pytest tests/ --tb=short
          
      - name: Run security checks
        run: |
          bandit -r src/ -f json -o bandit-report.json
          
      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            deps: automated dependency updates
            
            - Update Python dependencies to latest compatible versions
            - Security audit completed successfully
            - All tests passing
            
            ðŸ¤– Automated by GitHub Actions
          title: 'deps: automated dependency updates'
          body: |
            ## Automated Dependency Updates
            
            This PR contains automated updates to Python dependencies.
            
            ### Changes Made
            - âœ… Updated dependencies to latest compatible versions
            - âœ… Security audit completed
            - âœ… All tests passing
            - âœ… No security vulnerabilities detected
            
            ### Security Reports
            - Security audit results: Available in workflow artifacts
            - Safety check: No known vulnerabilities
            - Bandit scan: No security issues detected
            
            ### Next Steps
            - Review the changes
            - Verify all tests pass in CI
            - Merge if everything looks good
            
            ---
            *This PR was created automatically by the dependency update workflow.*
          branch: automated/dependency-updates
          branch-suffix: timestamp
          labels: |
            dependencies
            automated
            security

      - name: Upload security reports
        if: steps.changes.outputs.has_changes == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            security-audit.json
            safety-report.json
            bandit-report.json
          retention-days: 30

  update-pre-commit-hooks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      - name: Update pre-commit hooks
        run: |
          pre-commit autoupdate

      - name: Test updated hooks
        run: |
          pre-commit run --all-files

      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            ci: update pre-commit hooks
            
            ðŸ¤– Automated by GitHub Actions
          title: 'ci: update pre-commit hooks'
          body: |
            ## Pre-commit Hook Updates
            
            This PR updates pre-commit hooks to their latest versions.
            
            ### Changes Made
            - âœ… Updated all pre-commit hooks
            - âœ… Verified hooks work on all files
            
            ---
            *This PR was created automatically by the dependency update workflow.*
          branch: automated/pre-commit-updates
          branch-suffix: timestamp
          labels: |
            ci
            automated
            pre-commit

  update-github-actions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update GitHub Actions
        uses: renovatebot/github-action@v40.1.12
        with:
          configurationFile: .github/renovate.json
          token: ${{ secrets.GITHUB_TOKEN }}

# Renovate configuration for GitHub Actions updates
# File: .github/renovate.json
# {
#   "$schema": "https://docs.renovatebot.com/renovate-schema.json",
#   "extends": ["config:base"],
#   "packageRules": [
#     {
#       "matchUpdateTypes": ["minor", "patch"],
#       "automerge": true
#     }
#   ],
#   "schedule": ["before 10am on monday"],
#   "timezone": "UTC"
# }