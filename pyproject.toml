[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[project]
name = "openapi_doc_generator"
version = "0.1.0"
requires-python = ">=3.8"
dependencies = [
    "jinja2>=3.1",
    "graphql-core>=3.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-xdist>=3.0",
    "pytest-asyncio>=0.21",
    "pytest-mock>=3.10",
    "ruff>=0.1.0",
    "bandit[toml]>=1.7",
    "coverage[toml]>=7.0",
    "radon>=6.0",
    "mypy>=1.5",
    "pre-commit>=3.0",
    "black>=23.0",
    "isort>=5.12",
    "safety>=2.3",
    "pip-audit>=2.6",
]

[tool.setuptools]
package-dir = {"" = "src"}
packages = [
    "openapi_doc_generator",
    "openapi_doc_generator.templates",
    "openapi_doc_generator.plugins",
]

[project.entry-points."openapi_doc_generator.plugins"]
aiohttp = "openapi_doc_generator.plugins.aiohttp:AioHTTPPlugin"
starlette = "openapi_doc_generator.plugins.starlette:StarlettePlugin"
tornado = "openapi_doc_generator.plugins.tornado:TornadoPlugin"

[project.scripts]
"openapi-doc-generator" = "openapi_doc_generator.cli:main"
"github-hygiene-bot" = "openapi_doc_generator.github_hygiene:main"

[tool.setuptools.package-data]
"openapi_doc_generator.templates" = ["*.jinja"]

# Tool configurations
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
    "security: Security tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = []

[tool.ruff.per-file-ignores]
"tests/*" = ["E501"]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = ["graphql.*", "jinja2.*"]
ignore_missing_imports = true
